[38;5;46m make -j 3 -C ../libft [31m
cc -Wall -Wextra -Werror -c ft_bzero.c -o ft_bzero.o
cc -Wall -Wextra -Werror -c ft_memset.c -o ft_memset.o
cc -Wall -Wextra -Werror -c ft_memcpy.c -o ft_memcpy.o
cc -Wall -Wextra -Werror -c ft_memccpy.c -o ft_memccpy.o
cc -Wall -Wextra -Werror -c ft_memmove.c -o ft_memmove.o
cc -Wall -Wextra -Werror -c ft_memchr.c -o ft_memchr.o
cc -Wall -Wextra -Werror -c ft_memcmp.c -o ft_memcmp.o
cc -Wall -Wextra -Werror -c ft_strlen.c -o ft_strlen.o
cc -Wall -Wextra -Werror -c ft_strlcpy.c -o ft_strlcpy.o
cc -Wall -Wextra -Werror -c ft_strlcat.c -o ft_strlcat.o
cc -Wall -Wextra -Werror -c ft_strchr.c -o ft_strchr.o
cc -Wall -Wextra -Werror -c ft_strrchr.c -o ft_strrchr.o
cc -Wall -Wextra -Werror -c ft_strnstr.c -o ft_strnstr.o
cc -Wall -Wextra -Werror -c ft_strncmp.c -o ft_strncmp.o
cc -Wall -Wextra -Werror -c ft_atoi.c -o ft_atoi.o
cc -Wall -Wextra -Werror -c ft_isalpha.c -o ft_isalpha.o
cc -Wall -Wextra -Werror -c ft_isdigit.c -o ft_isdigit.o
cc -Wall -Wextra -Werror -c ft_isalnum.c -o ft_isalnum.o
cc -Wall -Wextra -Werror -c ft_isascii.c -o ft_isascii.o
cc -Wall -Wextra -Werror -c ft_isprint.c -o ft_isprint.o
cc -Wall -Wextra -Werror -c ft_toupper.c -o ft_toupper.o
cc -Wall -Wextra -Werror -c ft_tolower.c -o ft_tolower.o
cc -Wall -Wextra -Werror -c ft_calloc.c -o ft_calloc.o
cc -Wall -Wextra -Werror -c ft_strdup.c -o ft_strdup.o
cc -Wall -Wextra -Werror -c ft_substr.c -o ft_substr.o
cc -Wall -Wextra -Werror -c ft_strjoin.c -o ft_strjoin.o
cc -Wall -Wextra -Werror -c ft_strtrim.c -o ft_strtrim.o
cc -Wall -Wextra -Werror -c ft_split.c -o ft_split.o
cc -Wall -Wextra -Werror -c ft_itoa.c -o ft_itoa.o
cc -Wall -Wextra -Werror -c ft_strmapi.c -o ft_strmapi.o
cc -Wall -Wextra -Werror -c ft_putchar_fd.c -o ft_putchar_fd.o
cc -Wall -Wextra -Werror -c ft_putstr_fd.c -o ft_putstr_fd.o
cc -Wall -Wextra -Werror -c ft_putendl_fd.c -o ft_putendl_fd.o
cc -Wall -Wextra -Werror -c ft_putnbr_fd.c -o ft_putnbr_fd.o
cc -Wall -Wextra -Werror -c ft_issign.c -o ft_issign.o
cc -Wall -Wextra -Werror -c ft_isgraph.c -o ft_isgraph.o
cc -Wall -Wextra -Werror -c ft_islower.c -o ft_islower.o
cc -Wall -Wextra -Werror -c ft_isupper.c -o ft_isupper.o
cc -Wall -Wextra -Werror -c ft_isin.c -o ft_isin.o
cc -Wall -Wextra -Werror -c ft_isspace.c -o ft_isspace.o
cc -Wall -Wextra -Werror -c ft_ispunct.c -o ft_ispunct.o
ar rc libft.a ft_bzero.o ft_memset.o ft_memcpy.o ft_memccpy.o ft_memmove.o ft_memchr.o ft_memcmp.o ft_strlen.o ft_strlcpy.o ft_strlcat.o ft_strchr.o ft_strrchr.o ft_strnstr.o ft_strncmp.o ft_atoi.o ft_isalpha.o ft_isdigit.o ft_isalnum.o ft_isascii.o ft_isprint.o ft_toupper.o ft_tolower.o ft_calloc.o ft_strdup.o ft_substr.o ft_strjoin.o ft_strtrim.o ft_split.o ft_itoa.o ft_strmapi.o ft_putchar_fd.o ft_putstr_fd.o ft_putendl_fd.o ft_putnbr_fd.o ft_issign.o ft_isgraph.o ft_islower.o ft_isupper.o ft_isgraph.o ft_isin.o ft_isspace.o ft_ispunct.o
ranlib libft.a
[38;5;46m make bonus -j 3 -C ../libft
make[1]: Nothing to be done for `bonus'.
[38;5;46m cp ../libft/libft.a assets/ [31m
[38;5;46mâž¤ [38;5;47m clang -shared -fPIC assets/tmp/ft_atoi.o assets/tmp/ft_bzero.o assets/tmp/ft_calloc.o assets/tmp/ft_isalnum.o assets/tmp/ft_isalpha.o assets/tmp/ft_isascii.o assets/tmp/ft_isdigit.o assets/tmp/ft_isgraph.o assets/tmp/ft_isin.o assets/tmp/ft_islower.o assets/tmp/ft_isprint.o assets/tmp/ft_ispunct.o assets/tmp/ft_issign.o assets/tmp/ft_isspace.o assets/tmp/ft_isupper.o assets/tmp/ft_itoa.o assets/tmp/ft_memccpy.o assets/tmp/ft_memchr.o assets/tmp/ft_memcmp.o assets/tmp/ft_memcpy.o assets/tmp/ft_memmove.o assets/tmp/ft_memset.o assets/tmp/ft_putchar_fd.o assets/tmp/ft_putendl_fd.o assets/tmp/ft_putnbr_fd.o assets/tmp/ft_putstr_fd.o assets/tmp/ft_split.o assets/tmp/ft_strchr.o assets/tmp/ft_strdup.o assets/tmp/ft_strjoin.o assets/tmp/ft_strlcat.o assets/tmp/ft_strlcpy.o assets/tmp/ft_strlen.o assets/tmp/ft_strmapi.o assets/tmp/ft_strncmp.o assets/tmp/ft_strnstr.o assets/tmp/ft_strrchr.o assets/tmp/ft_strtrim.o assets/tmp/ft_substr.o assets/tmp/ft_tolower.o assets/tmp/ft_toupper.o -o libft.so [31m
[38;5;46;m[  Linking #0  ][0m
[38;5;46mâž¤ [38;5;47m clang -Werror -Wall -Wextra -O2 -funroll-loops -lncurses -o assets/libtests obj/src/main.o obj/src/test_functions.o obj/src/display_test_result.o obj/src/signal.o obj/src/sandbox.o obj/src/bench_functions.o obj/src/additional_functions.o obj/hardcore-mode/hardcore-main.o obj/hardcore-mode/error.o obj/hardcore-mode/ncurses-display.o obj/hardcore-mode/test-init.o obj/hardcore-mode/test-utils.o obj/hardcore-mode/test-strcpy.o obj/hardcore-mode/test-strcmp.o obj/hardcore-mode/test-strncmp.o obj/hardcore-mode/test-memset.o obj/hardcore-mode/test-memcpy.o obj/hardcore-mode/test-memccpy.o obj/hardcore-mode/test-memmove.o obj/hardcore-mode/test-memchr.o obj/hardcore-mode/test-memcmp.o obj/hardcore-mode/test-strlen.o obj/hardcore-mode/test-strncpy.o obj/hardcore-mode/test-strcat.o obj/hardcore-mode/test-strncat.o obj/hardcore-mode/test-strchr.o obj/hardcore-mode/test-strrchr.o obj/hardcore-mode/test-strstr.o[31m
[38;5;93mRUNNING TESTS:
[38;5;82m                      First part
.-"-.     .-"-.     .-"-.     .-"-.     .-"-.     .-"-.
     "-.-"     "-.-"     "-.-"     "-.-"     "-.-"    [0m
[0mft_memset:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_bzero:      [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_memcpy:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_memccpy:    [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_memmove:    [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m
[[38;5;160mcrash[0m]: your memmove does not work with a 128Mo data input !
[[38;5;160mcrash[0m]: your memmove does not well with NULL as both parameters and size

[0mft_memchr:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_memcmp:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[[38;5;160mfail[0m]: your memcmp does not work with basic input
[[38;5;160mfail[0m]: your memcmp does not work with basic input
[[38;5;160mfail[0m]: your memcmp does not cast the memory in unsigned char
[[38;5;160mfail[0m]: your memcmp does not work with basic input
[[38;5;160mcrash[0m]: your memcmp crash because it read too many bytes !

[0mft_strlen:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_isalpha:    [0m[38;5;46m[OK] [0m
[0mft_isdigit:    [0m[38;5;46m[OK] [0m
[0mft_isalnum:    [0m[38;5;46m[OK] [0m
[0mft_isascii:    [0m[38;5;46m[OK] [0m
[0mft_isprint:    [0m[38;5;46m[OK] [0m
[0mft_toupper:    [0m[38;5;46m[OK] [0m
[0mft_tolower:    [0m[38;5;46m[OK] [0m
[0mft_strchr:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_strrchr:    [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[0mft_strncmp:    [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[[38;5;160mfail[0m]: your strncmp does not cast in unsigned char the diff
[[38;5;160mfail[0m]: your strncmp does not work with non ascii chars

[0mft_strlcpy:    [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;203m[ðŸ’¥ ] [0m
[[38;5;160mfail[0m]: your strlcpy copies while destsize is zero, or does not return the size of the string it tried to create

[0mft_strlcat:    [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[[38;5;160mfail[0m]: your strlcat does not work with basic input
[[38;5;160mcrash[0m]: your strlcat does not work with a size of 0

[0mft_strnstr:    [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[[38;5;160mfail[0m]: your strnstr does not work with basic input
[[38;5;160mfail[0m]: your strnstr does not work with basic input
[[38;5;160mfail[0m]: your strnstr does not work with basic input
[[38;5;160mfail[0m]: your strnstr does not work with basic input
[[38;5;160mfail[0m]: your strnstr does not work with not found patern
[[38;5;160mfail[0m]: your strnstr does not work with empty strings

[0mft_atoi:       [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;226m[KO] [0m[38;5;226m[KO] [0m[38;5;46m[OK] [0m
[[38;5;226mKO[0m]: your atoi does not work with over long max value
[[38;5;226mKO[0m]: your atoi does not work with over long min value

[0mft_calloc:     [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[[38;5;160mcrash[0m]: you didn't protect your malloc return

[0mft_strdup:     [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m
[[38;5;160mcrash[0m]: you didn't protect your malloc return

[38;5;10m
In this part, you can choose to protect your function or not to,
a color code will tell you if your function is protected/not BUT stay coherent !
[38;5;250m[ðŸ›¡ ][38;5;10m --> protected
[38;5;203m[ðŸ’¥ ][38;5;10m --> not protected[0m[0m[38;5;226m
                     Second part
 __)(__  __)(__  __)(__  __)(__  __)(__  __)(__  __)(__  __)
(______)(______)(______)(______)(______)(______)(______)(___

[0mft_substr:     [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;203m[ðŸ’¥ ] [0m[38;5;160m[FAILED] [0m
[[38;5;160mfail[0m]: your substr did not allocate the good size so the \0 test may be false
[[38;5;160mcrash[0m]: you did not protect your malloc
[[38;5;160mfail[0m]: your substr does not work when start >= ft_strlen(s)

[0mft_strjoin:    [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;203m[ðŸ’¥ ] [0m
[[38;5;160mcrash[0m]: you did not protect your malloc return

[0mft_strtrim:    [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;226m[KO] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;203m[ðŸ’¥ ] [0m
[[38;5;160mfail[0m]: your strtrim does not work with basic input
[[38;5;160mfail[0m]: your strtrim does not work with basic input
[[38;5;160mfail[0m]: your strtrim does not work with basic input
[[38;5;226mKO[0m]: your strtrim did not allocate the good size so the \0 test may be false
[[38;5;160mfail[0m]: your strtrim does not allocate memory
[[38;5;160mfail[0m]: your strtrim does not set \0 to the end of the string

[0mft_split:      [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[FAILED] [0m[38;5;160m[CRASH] [0m[38;5;160m[FAILED] [0m[38;5;203m[ðŸ’¥ ] [0m
[[38;5;160mfail[0m]: your split does not work with basic input
[[38;5;160mfail[0m]: your split does not work with one word
[[38;5;160mfail[0m]: your split does not work with basic input
[[38;5;160mcrash[0m]: you did not protect your split
[[38;5;160mfail[0m]: your split does not work with basic input

[0mft_itoa:       [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;160m[CRASH] [0m[38;5;160m[CRASH] [0m[38;5;226m[KO] [0m[38;5;226m[KO] [0m[38;5;160m[CRASH] [0m
[[38;5;160mcrash[0m]: your itoa does not work with min int
[[38;5;160mcrash[0m]: your itoa don't set \0 at the end of the string
[[38;5;160mcrash[0m]: you did not protect your malloc
[[38;5;226mKO[0m]: your itoa does not allocate the good size so the \0 test may be false
[[38;5;226mKO[0m]: your itoa does not allocate the good size so the \0 test may be false
[[38;5;160mcrash[0m]: your itoa did not allocate memory for the int min value

[0mft_strmapi:    [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;160m[FAILED] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;203m[ðŸ’¥ ] [0m
[[38;5;160mfail[0m]: your strmapi does not work
[[38;5;160mfail[0m]: your strmapi does not malloc ?
[[38;5;160mfail[0m]: your strmapi did not set \0 at the end of the string
[[38;5;160mcrash[0m]: you did not protect your malloc return

[0mft_putchar_fd: [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;226m[KO] [0m 
[[38;5;226mKO[0m]: your putchar_fd does not work with unicode

[0mft_putstr_fd:  [0m[38;5;46m[OK] [0m [38;5;46m[OK] [0m[38;5;203m[ðŸ’¥ ] [0m 
[0mft_putendl_fd: [0m[38;5;46m[OK] [0m [38;5;46m[OK] [0m[38;5;203m[ðŸ’¥ ] [0m
[0mft_putnbr_fd:  [0m[38;5;46m[OK] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m[38;5;46m[OK] [0m[38;5;160m[CRASH] [0m
[[38;5;160mcrash[0m]: your putnbr_fd does not work with int min
[[38;5;160mcrash[0m]: your putnbr_fd allocate memory, wtf ???

[38;5;9m
 /~~~\/~~\/~~~\/~~~\/~~\/~~~\                    /~~~\/~~\/~~~\/~~~\/~~\/~~~\
 | /\/ /\/ /\ || /\/ /\/ /\ |                    | /\ \/\ \/\ || /\ \/\ \/\ |
  \ \/ /\/ /\/ /\ \/ /\/ /\/ /     Bonus part     \ \/\ \/\ \/ /\ \/\ \/\ \/ /
   \ \/\ \/\ \/  \ \/\ \/\ \/                      \/ /\/ /\/ /  \/ /\/ /\/ /
,_/\ \/\ \/\ \__/\ \/\ \/\ \______________________/ /\/ /\/ /\__/ /\/ /\/ /\_,
(__/\__/\__/\____/\__/\__/\________________________/\__/\__/\____/\__/\__/\__)

[0mft_lstnew:     [0m[38;5;160m[MISSING][0m
[0mft_lstadd_front: [0m[38;5;160m[MISSING][0m
[0mft_lstsize:    [0m[38;5;160m[MISSING][0m
[0mft_lstlast:    [0m[38;5;160m[MISSING][0m
[0mft_lstadd_back:[0m[38;5;160m[MISSING][0m
[0mft_lstdelone:  [0m[38;5;160m[MISSING][0m
[0mft_lstclear:   [0m[38;5;160m[MISSING][0m
[0mft_lstiter:    [0m[38;5;160m[MISSING][0m
[0mft_lstmap:     [0m[38;5;160m[MISSING][0m
[0mft_islower:    [0m[38;5;46m[OK] [0m
[0mft_isupper:    [0m[38;5;46m[OK] [0m
See result.log for more informations !
